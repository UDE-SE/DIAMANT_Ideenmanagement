import java.text.SimpleDateFormat

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.9.2'
    }
}


plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.9.2'
    id 'java'
}

group = 'de.unidue.se.diamant.backend'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

compileJava {options.encoding = "UTF-8"}
compileTestJava {options.encoding = "UTF-8"}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    jsondoclet
}

repositories {
    mavenCentral()
}

ext {
    javadocJsonDir = file("build/generated-javadoc-json")
    snippetsDir = file("build/generated-snippets")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.keycloak:keycloak-spring-boot-starter:14.0.0'
    implementation 'com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:20191001.1'
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    compile 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.2.6.RELEASE'
    compile("org.springframework.boot:spring-boot-starter-hateoas")
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'capital.scalable:spring-auto-restdocs-core:2.0.6'
    jsondoclet 'capital.scalable:spring-auto-restdocs-json-doclet:2.0.3'
}

asciidoctor {
    attributes "snippets": snippetsDir,
            "version": version,
            "date": new SimpleDateFormat("yyyy-MM-dd").format(new Date())
    inputs.dir snippetsDir
    dependsOn test
    sourceDir "src/test/asciidoc"
    outputDir "build/docs"
}

task jsonDoclet(type: Javadoc, dependsOn: compileJava) {
    source = sourceSets.main.allJava
    classpath = sourceSets.main.compileClasspath
    destinationDir = javadocJsonDir
    options.docletpath = configurations.jsondoclet.files.asType(List)
    options.doclet = 'capital.scalable.restdocs.jsondoclet.ExtractDocumentationAsJsonDoclet'
    options.memberLevel = JavadocMemberLevel.PACKAGE
    options.encoding = 'UTF-8'
}

test {
    systemProperty 'org.springframework.restdocs.outputDir', snippetsDir
    systemProperty 'org.springframework.restdocs.javadocJsonDir', javadocJsonDir

    dependsOn jsonDoclet
}

task includeApiDoc(type: Copy, dependsOn: asciidoctor){
    from "$asciidoctor.outputDir/html5"
    rename 'index.html', 'api.html'
    into "$buildDir/resources/main/static/"
}

build.dependsOn(includeApiDoc)

bootJar {
    launchScript()
    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}

